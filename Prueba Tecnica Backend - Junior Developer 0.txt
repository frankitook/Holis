Prueba Técnica Backend - Junior Developer

*Contexto: Eres parte del equipo de backend de UBER. Tu tarea es desarrollar una funcionalidad que permita gestionar la asignación de conductores a pasajeros en base a la cercanía y disponibilidad de los conductores.

*Requerimientos:

Deberás implementar una función en JavaScript que se encargue de asignar el conductor más cercano disponible a un pasajero que solicita un viaje.

*Descripción de la tarea:
Crea una función llamada assignDriver que tome los siguientes parámetros:

- passengerLocation: Un objeto que contiene las coordenadas { lat: number, lon: number } del pasajero.

-drivers: Un arreglo de objetos donde cada objeto representa un conductor, con las siguientes propiedades:
	-id: El ID único del conductor.
	-location: Un objeto con las coordenadas { lat: number, lon: number } del conductor.
	-available: Un booleano que indica si el conductor está disponible o no.

*Funcionalidad:

La función debe devolver el ID del conductor más cercano disponible al pasajero.

Si no hay conductores disponibles, la función debe devolver null.

Para calcular la cercanía, utiliza la siguiente funcion:

function calculateDistance(lat1, lon1, lat2, lon2) {
  const R = 6371; // Radio de la Tierra en km

  const dLat = (lat2 - lat1) * (Math.PI / 180); 
  const dLon = (lon2 - lon1) * (Math.PI / 180); 

  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +
            Math.cos(lat1 * (Math.PI / 180)) * Math.cos(lat2 * (Math.PI / 180)) *
            Math.sin(dLon / 2) * Math.sin(dLon / 2);

  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)); 

  return R * c; 
} 


Consideraciones:

-Puedes suponer que las coordenadas están en formato decimal y representan la latitud y longitud en grados.

-Optimiza tu código para que sea fácil de entender y eficiente, aunque la simplicidad y corrección son más importantes en este ejercicio.